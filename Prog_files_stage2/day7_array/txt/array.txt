ARRAY

=============================================================================================
#! /bin/bash
#find second lrgest and smallest without shorting

for i in `seq 10`
do
        arr[$i]=$((($RANDOM%899)+100))
        echo ${arr[$i]}
done

arr_size=`echo ${#arr[@]}`
echo "array size=$arr_size"

first=${arr[1]}
second=${arr[1]}

find_second_largest () {

first=${arr[1]}
second=${arr[1]}

for (( i = 1; i <= 10; ++i ))
do
        if [ $first -lt ${arr[$i]} ]; then
            second=$first
            first=${arr[$i]}
        else
                if [ ${arr[$i]} -gt $second ] && [ ${arr[$i]} -ne $first ]; then
                        second=${arr[$i]}
                fi
        fi
done
echo "second largest=$second"
}
find_second_smallest () {

first=${arr[1]}
second=${arr[1]}

for (( i = 1; i <= 10; ++i ))
do
        if [ $first -gt ${arr[$i]} ]; then
            second=$first
            first=${arr[$i]}
        else
                if [ ${arr[$i]} -lt $second ] && [ ${arr[$i]} -ne $first ]; then
                        second=${arr[$i]}
                fi
        fi
done
echo "second smallest=$second"
}

find_second_largest
find_second_smallest

--------------------------------------------------------------------------------------

#! /bin/bash
#find second large and smaellest by shorting array

for i in `seq 10`
do
        arr[$i]=$((($RANDOM%899)+100))
        echo ${arr[$i]}
done

Sort_arr()
{
for ((i=1;i<=${#arr[@]};i++))
do
    for ((j=i;j<=${#arr[@]};j++))
    do
        if [ ${arr[$i]} -gt ${arr[$j]} ]
        then
            temp=${arr[$i]}
            arr[$i]=${arr[$j]}
            arr[$j]=$temp
        fi
    done
done
}
Sort_arr
echo "${arr[@]}"
echo "second height no = ${arr[9]}"
echo "second smallest no = ${arr[2]}"

--------------------------------------------------------------------------------------------

#! /bin/bash
#prime factors of a no

read -p "enter a no--" no
c=0

for(( i = 1;i<=no;i++ ))
do
        for(( j = 1;j<=no;j++ ))
        do
                res=$(($i*$j))
                if [ $res -eq $no ]; then
                        factors+="$i "
                        for(( count = 1; count<=i; count++ ))
                        do
                                rem=`awk "BEGIN {print $i % $count}"`
                                if [ $rem -eq 0 ]; then
                                        noOFdivisers=$(($noOFdivisers+1))
                                fi
                        done

                        if [ $noOFdivisers -le 2 ] && [ $i -ne 1 ]; then
                                primeFactors[$c]=$i
                                c=$(($c+1))
                        fi
                        noOFdivisers=0
                fi
        done
done
echo "factors of $no= $factors"
echo "prime factors of $no= ${primeFactors[@]}"
------------------------------------------------------------------------------------------

#! /bin/bash
#find the three pair no whose sum=0

read -p "enter array length-" length
for (( i = 0 ;i<length; i++ ))
do
        read -p "enter index val$i-" arr[$i]
done
#echo ${arr[@]}

for (( j = 0; j < length; j++ ))
do
        for (( k = j+1; k < length; k++ ))
        do
                sum=$((${arr[$j]}+${arr[$k]}))
                for (( c = 0; c < length ;c++ ))
                do
                        result=$(($sum+${arr[$c]}))
                        if [ $result -eq 0 ]; then
                                echo "${arr[$j]} + ${arr[$k]} + ${arr[$c]} = 0"
                        fi
                done
        done
done

------------------------------------------------------------------------------------------
#! /bin/bash
#print no like 11 22 33 44 in btw 1 to 100

counter=0
for i in `seq 9`
do
        arr[$counter]=$((11*$i))
        counter=$(($counter+1))
done
echo "${arr[@]}"
-------------------------------------------------------------------------------------

